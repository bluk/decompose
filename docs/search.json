{"Structs/StringInput.html#/s:9Decompose11StringInputV_8positionACSS_Sitcfc":{"name":"init(_:position:)","abstract":"<p>Undocumented</p>","parent_name":"StringInput"},"Structs/StringInput.html#/s:9Decompose5InputP8positionSivp":{"name":"position","parent_name":"StringInput"},"Structs/StringInput.html#/s:9Decompose5InputP11isAvailableSbvp":{"name":"isAvailable","parent_name":"StringInput"},"Structs/StringInput.html#/s:9Decompose5InputP7current7ElementQzSgyF":{"name":"current()","parent_name":"StringInput"},"Structs/StringInput.html#/s:9Decompose5InputP7current5countSay7ElementQzGSi_tF":{"name":"current(count:)","parent_name":"StringInput"},"Structs/StringInput.html#/s:9Decompose5InputP8advanced2byxSi_tF":{"name":"advanced(by:)","parent_name":"StringInput"},"Structs/Parser.html#/s:9Decompose6ParserV12acceptsEmpty15firstSetSymbols5parseACyxq_GSbyXA_ShyAA6SymbolOy7ElementQzGGyXAAA6ResultOyxq_Gx_AMtctcfc":{"name":"init(acceptsEmpty:firstSetSymbols:parse:)","abstract":"<p>Initializes a parser.</p>","parent_name":"Parser"},"Structs/Parser.html#/s:9Decompose6ParserV19computeAcceptsEmptySbycvp":{"name":"computeAcceptsEmpty","abstract":"<p>Returns true if this <code>Parser</code> accepts an empty input.</p>","parent_name":"Parser"},"Structs/Parser.html#/s:9Decompose6ParserV22computeFirstSetSymbolsShyAA6SymbolOy7ElementQzGGycvp":{"name":"computeFirstSetSymbols","abstract":"<p>Returns the first set of symbols which can be accepted as input.</p>","parent_name":"Parser"},"Structs/Parser.html#/s:9Decompose6ParserV5applyyAA6ResultOyxq_Gx_ShyAA6SymbolOy7ElementQzGGtcvp":{"name":"apply","abstract":"<p>A function which takes an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Input.html\">Input</a></code> and a set of follow symbols and returns a type which either a parsed value","parent_name":"Parser"},"Structs/Parser.html#/s:9Decompose6ParserV5parseyAA6ResultOyxq_GxF":{"name":"parse(_:)","abstract":"<p>A method to run the parser with an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Input.html\">Input</a></code>.</p>","parent_name":"Parser"},"Structs/Parser.html#/s:9Decompose6ParserV3mapyACyxqd__Gqd__q_clF":{"name":"map(_:)","abstract":"<p>Maps this <code>Parser</code>&lsquo;s value using the function parameter.</p>","parent_name":"Parser"},"Structs/Parser.html#/s:9Decompose6ParserV5applyyACyxqd_0_GACyxqd__Gqd_0_qd__cRs_r0_lF":{"name":"apply(_:)","abstract":"<p>Sequentially invokes this <code>Parser</code>, then the parameter argument, and finally invokes the second parser&rsquo;s result","parent_name":"Parser"},"Structs/Parser.html#/s:9Decompose6ParserV2oryACyxq_GAEF":{"name":"or(_:)","abstract":"<p>Returns a <code>Parser</code> which invokes this <code>Parser</code>, and if it fails, invokes the second <code>Parser</code>.</p>","parent_name":"Parser"},"Structs/Parser.html#/s:9Decompose6ParserV4andLyACyxq_GACyxqd__GlF":{"name":"andL(_:)","abstract":"<p>Sequentially invokes this <code>Parser</code> and then the <code>Parser</code> argument while ignoring the second value.</p>","parent_name":"Parser"},"Structs/Parser.html#/s:9Decompose6ParserV4andRyACyxqd__GAElF":{"name":"andR(_:)","abstract":"<p>Sequentially invokes this <code>Parser</code> and then the <code>Parser</code> argument while ignoring the first value.</p>","parent_name":"Parser"},"Structs/Parser.html":{"name":"Parser","abstract":"<p>A value type for the <code>apply</code> function.</p>"},"Structs/StringInput.html":{"name":"StringInput","abstract":"<p>Use a <code>String</code> as an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Input.html\">Input</a></code> type.</p>"},"Protocols/Input.html#/s:9Decompose5InputP7ElementQa":{"name":"Element","abstract":"<p>The individual element type.</p>","parent_name":"Input"},"Protocols/Input.html#/s:9Decompose5InputP8positionSivp":{"name":"position","abstract":"<p>The current position in the <code>Input</code>. Useful for debugging and error messages.</p>","parent_name":"Input"},"Protocols/Input.html#/s:9Decompose5InputP11isAvailableSbvp":{"name":"isAvailable","abstract":"<p>Indicates if there are remaining elements available in the view.</p>","parent_name":"Input"},"Protocols/Input.html#/s:9Decompose5InputP7current7ElementQzSgyF":{"name":"current()","abstract":"<p>Returns the current element.</p>","parent_name":"Input"},"Protocols/Input.html#/s:9Decompose5InputP7current5countSay7ElementQzGSi_tF":{"name":"current(count:)","abstract":"<p>Returns the current and next <code>count - 1</code> number of elements.</p>","parent_name":"Input"},"Protocols/Input.html#/s:9Decompose5InputP8advancedxyF":{"name":"advanced()","abstract":"<p>Returns an <code>Input</code> which is offset by 1 element.</p>","parent_name":"Input"},"Protocols/Input.html#/s:9Decompose5InputP8advanced2byxSi_tF":{"name":"advanced(by:)","abstract":"<p>Returns an <code>Input</code> which is offset by the specified number of elements.</p>","parent_name":"Input"},"Protocols/Input.html":{"name":"Input","abstract":"<p>A view for a collection of values.</p>"},"Functions.html#/s:9Decompose3logoiyAA6ParserVyxq_GAE_AEtAA5InputRzSL7ElementRpzSHAHRQr0_lF":{"name":"<|>(_:_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which invokes the first <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code>, and if it fails, invokes the second <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code>.</p>"},"Functions.html#/s:9Decompose3lmgoiyAA6ParserVyxq0_GADyxq0_q_cG_ADyxq_GtAA5InputRzSL7ElementRpzSHAJRQr1_lF":{"name":"<*>(_:_:)","abstract":"<p>Sequentially invokes two Parsers while applying the second parser&rsquo;s result into the first parser&rsquo;s function"},"Functions.html#/s:9Decompose3lxgoiyAA6ParserVyxq0_Gq0_q_c_ADyxq_GtAA5InputRzSL7ElementRpzSHAIRQr1_lF":{"name":"<^>(_:_:)","abstract":"<p>Maps a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code>&lsquo;s value using the function parameter.</p>"},"Functions.html#/s:9Decompose2mgoiyAA6ParserVyxq0_GADyxq_G_AEtAA5InputRzSL7ElementRpzSHAIRQr1_lF":{"name":"*>(_:_:)","abstract":"<p>Sequentially invokes two Parsers while ignoring the first value.</p>"},"Functions.html#/s:9Decompose2lmoiyAA6ParserVyxq_GAE_ADyxq0_GtAA5InputRzSL7ElementRpzSHAIRQr1_lF":{"name":"<*(_:_:)","abstract":"<p>Sequentially invokes two Parsers while ignoring the second value.</p>"},"Functions.html#/s:9Decompose4lqqgoiyAA6ParserVyxq_GAE_q_tAA5InputRzSL7ElementRpzSHAHRQr0_lF":{"name":"<??>(_:_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which attempts the parser parameter and if it succeeds, return the value, but if it fails,"},"Enums/Symbol.html#/hash(into:)":{"name":"hash(into:)","parent_name":"Symbol"},"Enums/Symbol.html#/s:SL1loiySbx_xtFZ":{"name":"<(_:_:)","parent_name":"Symbol"},"Enums/Symbol.html#/s:SQ2eeoiySbx_xtFZ":{"name":"==(_:_:)","parent_name":"Symbol"},"Enums/Symbol.html#/s:9Decompose6SymbolO5valueyACyxGxcAEmSLRzSHRzlF":{"name":"value(_:)","abstract":"<p>A simple value.</p>","parent_name":"Symbol"},"Enums/Symbol.html#/s:9Decompose6SymbolO9predicateyACyxGSS_SbxctcAEmSLRzSHRzlF":{"name":"predicate(name:_:)","abstract":"<p>A predicate/condition which must be met.</p>","parent_name":"Symbol"},"Enums/Symbol.html#/s:9Decompose6SymbolO5emptyyACyxGAEmSLRzSHRzlF":{"name":"empty","abstract":"<p>A <q>no-op</q> value.</p>","parent_name":"Symbol"},"Enums/Symbol.html#/s:9Decompose6SymbolO7matchesySbxF":{"name":"matches(_:)","abstract":"<p>Undocumented</p>","parent_name":"Symbol"},"Enums/Result.html#/s:9Decompose6ResultO7successyACyxq_Gx_q_tcAEmAA5InputRzSL7ElementRpzSHAHRQr0_lF":{"name":"success(_:_:)","abstract":"<p>The parse was successful with the associated return <code>Value</code> and the remaining <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Input.html\">Input</a></code>.</p>","parent_name":"Result"},"Enums/Result.html#/s:9Decompose6ResultO7failureyACyxq_Gx_ShyAA6SymbolOy7ElementQzGGtcAEmAA5InputRzSLAIRQSHAIRQr0_lF":{"name":"failure(_:_:)","abstract":"<p>The parse failed with the associated return <code>Value</code> and possible follow symbols</p>","parent_name":"Result"},"Enums/Result.html#/s:9Decompose6ResultO23failureUnavailableInputyACyxq_Gx_ShyAA6SymbolOy7ElementQzGGtcAEmAA0E0RzSLAIRQSHAIRQr0_lF":{"name":"failureUnavailableInput(_:_:)","abstract":"<p>The parse failed due to unavailable input and the associated return <code>Value</code> and possible follow symbols</p>","parent_name":"Result"},"Enums/Result.html#/s:9Decompose6ResultO3mapyACyxqd__Gqd__q_XElF":{"name":"map(_:)","abstract":"<p>Maps a successful return value with the function parameter.</p>","parent_name":"Result"},"Enums/Empty.html#/s:9Decompose5EmptyO5emptyyA2CmF":{"name":"empty","abstract":"<p>Undocumented</p>","parent_name":"Empty"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO4pureyAA6ParserVyxq_Gq_AA5InputRzSL7ElementRpzSHAJRQr0_lFZ":{"name":"pure(_:)","abstract":"<p>Instantiates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which returns the value parameter and does not advanced the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Input.html\">Input</a></code>.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO6symbolyAA6ParserVyxq_Gq_AA5InputRzSLR_SHR_7ElementQzRs_r0_lFZ":{"name":"symbol(_:)","abstract":"<p>Instantiates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which accepts the symbol parameter and advances the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Input.html\">Input</a></code>.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO7satisfy13conditionName_AA6ParserVyxq_GSS_Sbq_ctAA5InputRzSLR_SHR_7ElementQzRs_r0_lFZ":{"name":"satisfy(conditionName:_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which passes an element to the <code>condition</code> function and succeeds if the <code>condition</code> returns","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO2oryAA6ParserVyxq_GAG_AGtAA5InputRzSL7ElementRpzSHAJRQr0_lFZ":{"name":"or(_:_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which invokes the first <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code>, and if it fails, invokes the second <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code>.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO3mapyAA6ParserVyxq0_GAFyxq_G_q0_q_ctAA5InputRzSL7ElementRpzSHAKRQr1_lFZ":{"name":"map(_:_:)","abstract":"<p>Maps a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code>&lsquo;s value using the function parameter.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO5applyyAA6ParserVyxq0_GAFyxq0_q_cG_AFyxq_GtAA5InputRzSL7ElementRpzSHALRQr1_lFZ":{"name":"apply(_:_:)","abstract":"<p>Sequentially invokes two Parsers while invoking the second parser&rsquo;s result into the first parser&rsquo;s function.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO4failAA6ParserVyxq_GyAA5InputRzSL7ElementRpzSHAJRQr0_lFZ":{"name":"fail()","abstract":"<p>Instantiates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which only fails.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO10endOfInputAA6ParserVyxAA5EmptyOGyAA0E0RzSL7ElementRpzSHALRQlFZ":{"name":"endOfInput()","abstract":"<p>Instantiates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which succeeds if the end of the input is reached.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO4wrapyAA6ParserVyxq_GAGycAA5InputRzSL7ElementRpzSHAJRQr0_lFZ":{"name":"wrap(_:)","abstract":"<p>Instantiates a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which constructs its real parser via a function.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO4charyAA6ParserVyxSJGSJAA5InputRzSJ7ElementRtzlFZ":{"name":"char(_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which tests if the current element is a specific <code>Character</code>.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO6letterAA6ParserVyxSJGyAA5InputRzSJ7ElementRtzlFZ":{"name":"letter()","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which tests if the current element is a letter.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO5digitAA6ParserVyxSJGyAA5InputRzSJ7ElementRtzlFZ":{"name":"digit()","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which tests if the current element is a digit.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO6stringyAA6ParserVyxSSGSSAA5InputRzSJ7ElementRtzlFZ":{"name":"string(_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which matches a given string.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO22stringEmptyReturnValueyAA6ParserVyxAA0D0OGSSAA5InputRzSJ7ElementRtzlFZ":{"name":"stringEmptyReturnValue(_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which matches a given string. If successful, the returned value is an empty array.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO4manyyAA6ParserVyxSayq_GGAFyxq_GAA5InputRzSL7ElementRpzSHALRQr0_lFZ":{"name":"many(_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which invokes the <code>parser</code> parameter zero or more times.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO5many1yAA6ParserVyxSayq_GGAFyxq_GAA5InputRzSL7ElementRpzSHALRQr0_lFZ":{"name":"many1(_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which invokes the <code>parser</code> parameter one or more times.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO8skipManyyAA6ParserVyxAA5EmptyOGAFyxq_GAA5InputRzSL7ElementRpzSHAMRQr0_lFZ":{"name":"skipMany(_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which discards the return value of the <code>parser</code> parameter zero or more times.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO9skipMany1yAA6ParserVyxAA5EmptyOGAFyxq_GAA5InputRzSL7ElementRpzSHAMRQr0_lFZ":{"name":"skipMany1(_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which discards the return value of the <code>parser</code> parameter one or more times.</p>","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO14optionOptionalyAA6ParserVyxq_SgGAFyxq_GAA5InputRzSL7ElementRpzSHALRQr0_lFZ":{"name":"optionOptional(_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which attempts the parser parameter and if it succeeds, return the value, but if it fails,","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO6optionyAA6ParserVyxq_GAG_q_tAA5InputRzSL7ElementRpzSHAJRQr0_lFZ":{"name":"option(_:_:)","abstract":"<p>Returns a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code> which attempts the parser parameter and if it succeeds, return the value, but if it fails,","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO6chainryAA6ParserVyxq_GAG_AFyxq_q_cq_cGq_tAA5InputRzSL7ElementRpzSHAKRQr0_lFZ":{"name":"chainr(_:_:_:)","abstract":"<p>Parses an optional operand with an optional repeat of operator and operand where the final parsed value is the","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO7chainr1yAA6ParserVyxq_GAG_AFyxq_q_cq_cGtAA5InputRzSL7ElementRpzSHAKRQr0_lFZ":{"name":"chainr1(_:_:)","abstract":"<p>Parses a value operand and zero or more operator and operand where the final parsed value is the","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO6chainlyAA6ParserVyxq_GAG_AFyxq_q_cq_cGq_tAA5InputRzSL7ElementRpzSHAKRQr0_lFZ":{"name":"chainl(_:_:_:)","abstract":"<p>Parses an optional operand with an optional repeat of operator and operand where the final parsed value is the","parent_name":"Combinators"},"Enums/Combinators.html#/s:9Decompose11CombinatorsO7chainl1yAA6ParserVyxq_GAG_AFyxq_q_cq_cGtAA5InputRzSL7ElementRpzSHAKRQr0_lFZ":{"name":"chainl1(_:_:)","abstract":"<p>Parses a value operand and zero or more operator and operand where the final parsed value is the","parent_name":"Combinators"},"Enums/Combinators.html":{"name":"Combinators","abstract":"<p>Convenience methods to create and compose <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Parser.html\">Parser</a></code>s.</p>"},"Enums/Empty.html":{"name":"Empty","abstract":"<p>Represents an empty value.</p>"},"Enums/Result.html":{"name":"Result","abstract":"<p>A value type which indicates if the function was successful or not.</p>"},"Enums/Symbol.html":{"name":"Symbol","abstract":"<p>Possible next symbols that can be accepted from the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/Input.html\">Input</a></code>.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"}}